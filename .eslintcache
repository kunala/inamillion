[{"/Users/kunal.agarwal/dev/inamillion/src/index.js":"1","/Users/kunal.agarwal/dev/inamillion/src/reportWebVitals.js":"2","/Users/kunal.agarwal/dev/inamillion/src/App.js":"3"},{"size":503,"mtime":1611487671002,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1611043118686,"results":"6","hashOfConfig":"5"},{"size":6719,"mtime":1611524573996,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v849zd",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kunal.agarwal/dev/inamillion/src/index.js",[],"/Users/kunal.agarwal/dev/inamillion/src/reportWebVitals.js",[],["15","16"],"/Users/kunal.agarwal/dev/inamillion/src/App.js",["17","18","19","20","21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":17,"column":3,"nodeType":"29","messageId":"30","endLine":17,"endColumn":11},{"ruleId":"31","severity":1,"message":"32","line":28,"column":13,"nodeType":"33","endLine":31,"endColumn":4},{"ruleId":"27","severity":1,"message":"34","line":30,"column":11,"nodeType":"29","messageId":"30","endLine":30,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":50,"column":13,"nodeType":"37","endLine":50,"endColumn":46},{"ruleId":"38","severity":1,"message":"39","line":107,"column":72,"nodeType":"40","messageId":"41","endLine":107,"endColumn":74},{"ruleId":"27","severity":1,"message":"42","line":199,"column":10,"nodeType":"29","messageId":"30","endLine":199,"endColumn":14},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'timer' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Play' is defined but never used.","no-global-assign","no-unsafe-negation"]